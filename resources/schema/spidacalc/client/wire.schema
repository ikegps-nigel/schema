{
  "description": "Engineering properties for a wire",
  "id": "#/spidacalc/client/wire.schema",
  "type": "object",
  "required": [
    "calculation",
    "conductorStrands",
    "coreStrands",
    "crossArea",
    "description",
    "diameter",
    "numberOfConductors",
    "size",
    "strength",
    "tensionGroups",
    "usageGroups",
    "weight"
  ],
  "properties": {
    "id": {
        "type": "string"
    },
    "version": {
        "type": "string"
    },
    "conductorStrands": {
      "type": "integer"
    },
    "description": {
      "type": "string"
    },
    "coreStrands": {
      "type": "integer"
    },
    "numberOfConductors": {
      "type": "integer"
    },
    "size": {
      "type": "string"
    },
    "calculation": {
      "$ref": "../../spidacalc/client/enums/calculation.schema"
    },
    "crossArea": {
      "$ref": "../../general/measurable.schema"
    },
    "diameter": {
      "$ref": "../../general/measurable.schema"
    },
    "conductorProperties": {
      "type": "string"
    },
    "expansionCoefficient": {
      "$ref": "../../general/measurable.schema"
    },
    "modulus": {
      "$ref": "../../general/measurable.schema"
    },
    "coreExpansionCoefficient": {
      "$ref": "../../general/measurable.schema"
    },
    "coreModulus": {
      "$ref": "../../general/measurable.schema"
    },
    "outerExpansionCoefficient": {
      "$ref": "../../general/measurable.schema"
    },
    "outerModulus": {
      "$ref": "../../general/measurable.schema"
    },
    "stressStrainPolynomials": {
      "type": "object",
      "required": [ "outer", "core" ],
      "properties": {
        "outer": {
          "type": "array",
          "minItems": 5,
          "maxItems": 5,
          "items": {
            "$ref": "../../general/measurable.schema"
          }
        },
        "core": {
          "type": "array",
          "minItems": 5,
          "maxItems": 5,
          "items": {
            "$ref": "../../general/measurable.schema"
          }
        }
      }
    },
    "creepPolynomials": {
      "type": "object",
      "required": [ "outer", "core" ],
      "properties": {
        "outer": {
          "type": "array",
          "minItems": 5,
          "maxItems": 5,
          "items": {
            "$ref": "../../general/measurable.schema"
          }
        },
        "core": {
          "type": "array",
          "minItems": 5,
          "maxItems": 5,
          "items": {
            "$ref": "../../general/measurable.schema"
          }
        }
      }
    },
    "strength": {
      "$ref": "../../general/measurable.schema"
    },
    "weight": {
      "$ref": "../../general/measurable.schema"
    },
    "tensionGroups": {
      "type": "array",
      "items": {
        "$ref": "../../spidacalc/client/tension_group.schema"
      }
    },
    "usageGroups": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "aliases": {
      "description": "A list of alternative aliases/framing codes for this item in integrations. All tensionGroupName fields must reference a tension group in this wire.",
      "type": "array",
      "items": {
        "$ref": "../../spidacalc/client/wire_alias.schema"
      }
    }
  },
  "anyOf": [
    {
      "type": "object",
      "required": [
        "expansionCoefficient", "modulus"
      ],
      "properties": {
        "conductorProperties": {
          "type": "string",
          "enum": [ "TOTAL" ]
        }
      }
    },
    {
      "type": "object",
      "required": [
        "conductorProperties",
        "coreExpansionCoefficient",
        "coreModulus",
        "outerExpansionCoefficient",
        "outerModulus"
      ],
      "properties": {
        "conductorProperties": {
          "type": "string",
          "enum": [ "CORE_AND_OUTER" ]
        }
      }
    }
  ],
  "anyOf": [
    {
      "type": "object",
      "required": [ "creepPolynomials", "stressStrainPolynomials" ],
      "properties": {
        "calculation": {
          "enum": [ "ADVANCED" ]
        }
      }
    },
    {
      "type": "object",
      "properties": {
        "calculation": {
          "enum": [ "STATIC", "DYNAMIC" ]
        }
      }
    }
  ],
  "additionalProperties": false
}
